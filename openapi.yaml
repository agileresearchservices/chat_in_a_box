openapi: 3.1.0
info:
  title: Chat in a Box API
  description: |
    API documentation for Chat in a Box, a sophisticated RAG-based chat application using Ollama.
    
    Key Features:
    - Streaming chat responses
    - Vector embeddings for semantic search
    - Document similarity search
    - Conversation memory management
    - OpenAPI documentation
  version: 1.0.0
  contact:
    name: Chat in a Box Support

servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /api/chat:
    post:
      summary: Send a chat message
      description: |
        Sends a message to the chat API and receives a streaming response.
        The response includes both the AI's reply and its thinking process.
      operationId: sendChatMessage
      tags:
        - Chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The user's message to process
                  example: "What is the capital of France?"
                context:
                  type: array
                  items:
                    $ref: '#/components/schemas/Message'
                  description: Previous conversation context (optional)
              required:
                - prompt
      responses:
        '200':
          description: Successful response with streaming content
          content:
            text/event-stream:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: The generated response text
                  thinkingProcess:
                    type: string
                    description: The AI's reasoning process (optional)
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Clear conversation memory
      description: Clears the entire conversation history and context
      operationId: clearChatMemory
      tags:
        - Chat
      responses:
        '200':
          description: Memory successfully cleared
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Memory cleared successfully"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/embed:
    post:
      summary: Generate text embeddings
      description: |
        Generates vector embeddings for input text using Ollama's embedding service.
        Embeddings are numerical representations that capture semantic meaning,
        useful for semantic search, document similarity, and machine learning tasks.
      operationId: generateEmbeddings
      tags:
        - Embeddings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Input text to generate embeddings for
                  example: "Hello, world!"
              required:
                - text
      responses:
        '200':
          description: Successfully generated embeddings
          content:
            application/json:
              schema:
                type: object
                properties:
                  embeddings:
                    type: array
                    items:
                      type: number
                    description: Vector representation of the input text
        '400':
          description: Invalid input (e.g., empty text)
        '500':
          description: Server error during embedding generation

  /api/search:
    post:
      summary: Hybrid document search
      description: |
        Perform hybrid search across the document corpus using vector embeddings.
        Returns documents ranked by semantic and lexical similarity to the query.
      operationId: searchDocuments
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: The search query text
                  example: "How to implement authentication?"
                limit:
                  type: integer
                  description: Maximum number of results to return (optional)
                  default: 5
              required:
                - query
      responses:
        '200':
          description: Successful search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/summarize:
    post:
      summary: Summarize multiple messages
      description: |
        Generates a concise summary of one or more input messages using the Ollama AI.
        Useful for condensing multiple text inputs into a single, coherent summary.
      operationId: summarizeMessages
      tags:
        - Utilities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                messages:
                  type: array
                  items:
                    type: string
                    description: Individual messages to be summarized
                    example: "The quick brown fox jumps over the lazy dog."
                  minItems: 1
                  description: List of messages to summarize
              required:
                - messages
      responses:
        '200':
          description: Successful summary generation
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: string
                    description: The generated summary of the input messages
        '400':
          description: Invalid request (e.g., empty messages, messages too long)
        '500':
          description: Server error during summary generation

  /api/docs:
    get:
      summary: Get API documentation
      description: Retrieve the OpenAPI/Swagger documentation for the API
      operationId: getApiDocs
      tags:
        - Documentation
      responses:
        '200':
          description: Successful response with API documentation
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/redoc:
    get:
      summary: Retrieve API documentation
      description: |
        Serves the OpenAPI specification for the application,
        enabling interactive API documentation via Redoc.
      operationId: getApiDocumentation
      tags:
        - Documentation
      responses:
        '200':
          description: Successfully retrieved API documentation
          content:
            application/json:
              schema:
                type: object
                description: Full OpenAPI specification
        '500':
          description: Server error retrieving documentation

components:
  schemas:
    Message:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the message
        role:
          type: string
          enum: [user, assistant]
          description: Role of the message sender
        content:
          type: string
          description: Content of the message
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the message was sent
        thinkingProcess:
          type: string
          description: The AI's reasoning process (only for assistant messages)
      required:
        - id
        - role
        - content
        - timestamp

    SearchResult:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document
        content:
          type: string
          description: The document content or relevant excerpt
        similarity:
          type: number
          format: float
          description: Similarity score between 0 and 1
        metadata:
          type: object
          description: Additional document metadata
      required:
        - id
        - content
        - similarity

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "An error occurred while processing your request"
      required:
        - error

tags:
  - name: Chat
    description: Conversational AI interactions
  - name: Search
    description: Semantic document search operations
  - name: Documentation
    description: API documentation retrieval
  - name: Utilities
    description: Utility functions for text processing
  - name: Embeddings
    description: Text embedding generation for semantic analysis
