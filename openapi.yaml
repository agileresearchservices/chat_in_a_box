openapi: 3.1.0
info:
  title: Chat in a Box API
  description: |
    API documentation for Chat in a Box, a sophisticated RAG-based chat application using Ollama.
    
    Key Features:
    - Streaming chat responses
    - Vector embeddings for semantic search
    - Document similarity search
    - Conversation memory management
    - OpenAPI documentation
  version: 1.0.0
  contact:
    name: Chat in a Box Support

servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /api/chat:
    post:
      summary: Send a chat message
      description: |
        Sends a message to the chat API and receives a streaming response.
        The response includes both the AI's reply and its thinking process.
      operationId: sendChatMessage
      tags:
        - Chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The user's message to process
                  example: "What is the capital of France?"
                context:
                  type: array
                  items:
                    $ref: '#/components/schemas/Message'
                  description: Previous conversation context (optional)
              required:
                - prompt
      responses:
        '200':
          description: Successful response with streaming content
          content:
            text/event-stream:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: The generated response text
                  thinkingProcess:
                    type: string
                    description: The AI's reasoning process (optional)
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    delete:
      summary: Clear conversation memory
      description: Clears the entire conversation history and context
      operationId: clearChatMemory
      tags:
        - Chat
      responses:
        '200':
          description: Memory successfully cleared
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Memory cleared successfully"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /api/embed:
    post:
      summary: Generate text embeddings
      description: |
        Generates vector embeddings for input text using Ollama's embedding service.
        Embeddings are numerical representations that capture semantic meaning,
        useful for semantic search, document similarity, and machine learning tasks.
      operationId: generateEmbeddings
      tags:
        - Embeddings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Input text to generate embeddings for
                  example: "Hello, world!"
              required:
                - text
      responses:
        '200':
          description: Successfully generated embeddings
          content:
            application/json:
              schema:
                type: object
                properties:
                  embeddings:
                    type: array
                    items:
                      type: number
                    description: Vector representation of the input text
        '400':
          description: Invalid input (e.g., empty text)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error during embedding generation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /api/search:
    post:
      summary: Hybrid document search
      description: |
        Perform hybrid search across the document corpus using vector embeddings.
        Returns documents ranked by semantic and lexical similarity to the query.
      operationId: searchDocuments
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: The search query text
                  example: "How to implement authentication?"
                limit:
                  type: integer
                  description: Maximum number of results to return (optional)
                  default: 5
              required:
                - query
      responses:
        '200':
          description: Successful search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /api/summarize:
    post:
      summary: Summarize multiple messages
      description: |
        Generates a concise summary of one or more input messages using the Ollama AI.
        Useful for condensing multiple text inputs into a single, coherent summary.
      operationId: summarizeMessages
      tags:
        - Utilities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                messages:
                  type: array
                  items:
                    type: string
                    minLength: 1
                    maxLength: 2000
                  description: List of messages to summarize
                  minItems: 1
              required:
                - messages
      responses:
        '200':
          description: Successfully generated summary
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: string
                    description: Concise summary of the input messages
        '400':
          description: Invalid input (e.g., empty messages, messages too long)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Server error during summarization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /api/weather:
    post:
      summary: Get US city weather information
      description: |
        Retrieves real-time weather data from the National Weather Service API for US cities.
        Includes city geocoding, grid point retrieval, and detailed weather forecast information.
        Note: This service only works for cities within the United States.
      operationId: getWeatherForCity
      tags:
        - Weather
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                city:
                  type: string
                  description: Name of the US city to get weather for
                  example: "Boston"
              required:
                - city
      responses:
        '200':
          description: Successfully retrieved weather information
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      location:
                        type: string
                        description: City and state name
                        example: "Boston, Massachusetts"
                      temperature:
                        type: number
                        description: Current temperature
                        example: 72
                      temperatureUnit:
                        type: string
                        description: Temperature unit (F for Fahrenheit)
                        example: "F"
                      shortForecast:
                        type: string
                        description: Brief weather description
                        example: "Partly Sunny"
                      detailedForecast:
                        type: string
                        description: Detailed weather forecast
                        example: "Partly sunny with a high near 72. North wind around 10 mph."
                  success:
                    type: boolean
                    example: true
        '400':
          description: Invalid input (e.g., empty city name)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '404':
          description: City not found or non-US location
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Location 'Paris, France' appears to be outside the United States"
                  success:
                    type: boolean
                    example: false
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /api/nlp:
    post:
      summary: Natural Language Processing Analysis
      description: |
        Performs comprehensive natural language processing on input text, including:
        - Named Entity Recognition (NER) for people, cities, dates, emails, phones, and URLs
        - Sentiment Analysis with scoring and classification
        - Part-of-speech tagging
      operationId: analyzeText
      tags:
        - NLP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Text to analyze
                  example: "John visited New York last summer and loved the city!"
                  minLength: 1
                  maxLength: 1000
              required:
                - text
      responses:
        '200':
          description: Successful analysis
          content:
            application/json:
              schema:
                type: object
                properties:
                  entities:
                    type: array
                    description: Named entities found in the text
                    items:
                      type: object
                      properties:
                        entity:
                          type: string
                          description: Type of entity (e.g., person, city, date)
                          example: "city"
                        value:
                          type: string
                          description: Actual value of the entity
                          example: "New York"
                        type:
                          type: string
                          description: Entity recognition method
                          example: "enum"
                  tokens:
                    type: array
                    description: Tokenized words with part-of-speech tags
                    items:
                      type: object
                      properties:
                        token:
                          type: string
                          description: Individual word or token
                          example: "visited"
                        tag:
                          type: string
                          description: Part-of-speech tag
                          example: "VBD"
                  sentiment:
                    type: object
                    description: Sentiment analysis results
                    properties:
                      score:
                        type: number
                        description: Sentiment score (-1 to 1)
                        example: 0.6
                      comparative:
                        type: number
                        description: Comparative sentiment score
                        example: 0.2
                      vote:
                        type: string
                        description: Overall sentiment classification
                        enum: ["positive", "negative", "neutral"]
                        example: "positive"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

components:
  schemas:
    Message:
      type: object
      properties:
        role:
          type: string
          enum: ['user', 'assistant', 'system']
          description: Role of the message sender
        content:
          type: string
          description: Text content of the message
      required:
        - role
        - content

    SearchResult:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the document
        title:
          type: string
          description: Title of the document
        content:
          type: string
          description: Relevant excerpt from the document
        score:
          type: number
          description: Relevance score of the search result
        source:
          type: string
          description: Origin or file path of the document
      required:
        - id
        - title
        - content
        - score

    ValidationError:
      type: object
      properties:
        message:
          type: string
          description: Detailed error message
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: Field causing the validation error
              reason:
                type: string
                description: Reason for the validation error
      required:
        - message

    ServerError:
      type: object
      properties:
        message:
          type: string
          description: Detailed error description
        code:
          type: string
          description: Error code for tracking
      required:
        - message
